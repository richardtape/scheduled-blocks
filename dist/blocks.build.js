/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!***********************!*\
  !*** ./src/blocks.js ***!
  \***********************/
/*! exports provided: addAttribute, addCustomClassName, addScheduledBlockControls, addSaveProps */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"addAttribute\"] = addAttribute;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addCustomClassName\", function() { return addCustomClassName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addScheduledBlockControls\", function() { return addScheduledBlockControls; });\n/* harmony export (immutable) */ __webpack_exports__[\"addSaveProps\"] = addSaveProps;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss__ = __webpack_require__(/*! ./editor.scss */ 1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__editor_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__editor_scss__);\n/**\n * WordPress dependencies\n */\nvar _lodash = lodash,\n    assign = _lodash.assign;\nvar __ = wp.i18n.__;\nvar Fragment = wp.element.Fragment;\nvar addFilter = wp.hooks.addFilter;\nvar _wp$components = wp.components,\n    TextControl = _wp$components.TextControl,\n    PanelBody = _wp$components.PanelBody,\n    DateTimePicker = _wp$components.DateTimePicker,\n    Dropdown = _wp$components.Dropdown;\nvar _wp$compose = wp.compose,\n    createHigherOrderComponent = _wp$compose.createHigherOrderComponent,\n    withState = _wp$compose.withState;\nvar InspectorControls = wp.editor.InspectorControls;\n// const { getSettings } = wp.date;\n\nvar __experimentalGetSettings = wp.date.__experimentalGetSettings;\n\n\n\n\n/**\n * Which block types supprt scheduling? This comes from PHP.\n */\nvar validBlockTypes = scheduledBlocksPHPData.valid_block_types;\n\n/**\n * Is the passed block name one which supports block scheduling?\n * The passed {name} is checked against the PHP var which sets out\n * which blocks are supported.\n *\n * @param {string} name The name of the block.\n */\nfunction isValidBlockType(name) {\n\n\treturn validBlockTypes.includes(name);\n} // end isValidBlockType()\n\n/**\n * Filters registered block settings, extending attributes with our schedule data.\n *\n * @param {Object} settings Original block settings.\n *\n * @return {Object} Filtered block settings.\n */\nfunction addAttribute(settings) {\n\n\t// If this block supports scheduling, add our custom attribute\n\tif (isValidBlockType(settings.name)) {\n\n\t\t// Use Lodash's assign to gracefully handle if attributes are undefined\n\t\tsettings.attributes = assign(settings.attributes, {\n\t\t\tscheduledStart: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tscheduledEnd: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t});\n\t}\n\n\treturn settings;\n} // end addAttribute()\n\n/**\n * To know if the current timezone is a 12 hour time with look for \"a\" in the time format.\n * We also make sure this a is not escaped by a \"/\".\n *\n * @param {string} time\n * @return bool\n */\nfunction isTwelveHourTime(time) {\n\n\tvar test = /a(?!\\\\)/i.test(time.toLowerCase() // Test only the lower case a\n\t.replace(/\\\\\\\\/g, '') // Replace \"//\" with empty strings\n\t.split('').reverse().join('') // Reverse the string and test for \"a\" not followed by a slash\n\t);\n\n\treturn test;\n} // end isTwelveHourTime()\n\n/**\n * Add a class to the classList to the passed block ID.\n *\n * @param {string} ID The ID of the block to which we want to add the class.\n */\nfunction addToClassList(ID) {\n\n\tvar domID = 'block-' + ID;\n\tvar thisBlock = document.getElementById(domID);\n\n\tthisBlock.classList.add('scheduled-block-content');\n} // end addToClassList\n\n/**\n * Add a custom className to blocks which are scheduled.\n */\nvar addCustomClassName = createHigherOrderComponent(function (BlockEdit) {\n\n\treturn function (props) {\n\n\t\t// Ensure that we have a scheduledStart or scheduledEnd\n\t\tif ((typeof props.attributes.scheduledStart === \"undefined\" || \"\" === props.attributes.scheduledStart) && (typeof props.attributes.scheduledEnd === \"undefined\" || \"\" === props.attributes.scheduledEnd)) {\n\t\t\treturn wp.element.createElement(BlockEdit, props);\n\t\t}\n\n\t\t// OK, yep, we have a non-empty schedule, so let's add an icon.\n\t\tvar className = props.attributes.className || '';\n\t\tclassName += ' scheduled-block-content';\n\n\t\tvar rest = Object.assign({}, props, {\n\t\t\tattributes: Object.assign({}, props.attributes, {\n\t\t\t\tclassName: className\n\t\t\t})\n\t\t});\n\n\t\treturn wp.element.createElement(BlockEdit, rest);\n\t};\n}, 'addCustomClassName');\n\n/**\n * Override the default edit UI to include a new block inspector control for\n * assigning the scheduling, if block supports scheduling.\n *\n * @param {function|Component} BlockEdit Original component.\n *\n * @return {string} Wrapped component.\n */\nvar addScheduledBlockControls = createHigherOrderComponent(function (BlockEdit) {\n\n\treturn function (props) {\n\n\t\tif (!isValidBlockType(props.name) || !props.isSelected) {\n\t\t\treturn wp.element.createElement(BlockEdit, props);\n\t\t}\n\n\t\tvar ScheduledBlocksScheduleEndDateTimePicker = withState({\n\t\t\tdate: new Date()\n\t\t})(function (_ref) {\n\t\t\tvar date = _ref.date,\n\t\t\t    setState = _ref.setState;\n\n\n\t\t\tvar settings = __experimentalGetSettings();\n\t\t\tvar is12HourTime = isTwelveHourTime(settings.formats.time);\n\n\t\t\t// If we have a date saved in props, use that. Otherwise, use the current date.\n\t\t\treturn wp.element.createElement(DateTimePicker, {\n\t\t\t\tcurrentDate: props.attributes.scheduledEnd || date,\n\t\t\t\tonChange: function onChange(newDate) {\n\t\t\t\t\tsetState({ newDate: newDate });\n\t\t\t\t\tprops.setAttributes({\n\t\t\t\t\t\tscheduledEnd: newDate\n\t\t\t\t\t});\n\t\t\t\t\taddToClassList(props.clientId);\n\t\t\t\t},\n\t\t\t\tlocale: settings.l10n.locale,\n\t\t\t\tis12Hour: is12HourTime\n\t\t\t});\n\t\t});\n\n\t\tvar ScheduledBlocksScheduleStartDateTimePicker = withState({\n\t\t\tdate: new Date()\n\t\t})(function (_ref2) {\n\t\t\tvar date = _ref2.date,\n\t\t\t    setState = _ref2.setState;\n\n\n\t\t\tvar settings = __experimentalGetSettings();\n\t\t\tvar is12HourTime = isTwelveHourTime(settings.formats.time);\n\n\t\t\t// If we have a date saved in props, use that. Otherwise, use the current date.\n\t\t\treturn wp.element.createElement(DateTimePicker, {\n\t\t\t\tcurrentDate: props.attributes.scheduledStart || date,\n\t\t\t\tonChange: function onChange(newDate) {\n\t\t\t\t\tsetState({ newDate: newDate });\n\t\t\t\t\tprops.setAttributes({\n\t\t\t\t\t\tscheduledStart: newDate\n\t\t\t\t\t});\n\t\t\t\t\t// add css style to block\n\t\t\t\t\taddToClassList(props.clientId);\n\t\t\t\t},\n\t\t\t\tlocale: settings.l10n.locale,\n\t\t\t\tis12Hour: is12HourTime\n\t\t\t});\n\t\t});\n\n\t\treturn wp.element.createElement(\n\t\t\tFragment,\n\t\t\tnull,\n\t\t\twp.element.createElement(BlockEdit, props),\n\t\t\twp.element.createElement(\n\t\t\t\tInspectorControls,\n\t\t\t\tnull,\n\t\t\t\twp.element.createElement(\n\t\t\t\t\tPanelBody,\n\t\t\t\t\t{ title: __('Block Scheduling') },\n\t\t\t\t\twp.element.createElement(Dropdown, {\n\t\t\t\t\t\tclassName: 'scheduled-blocks-start-date-dropdown',\n\t\t\t\t\t\tcontentClassName: 'scheduled-blocks-start-date-popover',\n\t\t\t\t\t\tposition: 'bottom center',\n\t\t\t\t\t\trenderToggle: function renderToggle(_ref3) {\n\t\t\t\t\t\t\tvar isOpen = _ref3.isOpen,\n\t\t\t\t\t\t\t    onToggle = _ref3.onToggle;\n\t\t\t\t\t\t\treturn wp.element.createElement(TextControl, {\n\t\t\t\t\t\t\t\tlabel: __('Scheduled Start Date/Time'),\n\t\t\t\t\t\t\t\tonClick: onToggle,\n\t\t\t\t\t\t\t\t'aria-expanded': isOpen,\n\t\t\t\t\t\t\t\thelp: __('When this block will be shown.'),\n\t\t\t\t\t\t\t\tvalue: props.attributes.scheduledStart || '',\n\t\t\t\t\t\t\t\tonChange: function onChange(nextValue) {\n\t\t\t\t\t\t\t\t\tprops.setAttributes({\n\t\t\t\t\t\t\t\t\t\tscheduledStart: nextValue\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderContent: function renderContent() {\n\t\t\t\t\t\t\treturn wp.element.createElement(ScheduledBlocksScheduleStartDateTimePicker, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\twp.element.createElement(Dropdown, {\n\t\t\t\t\t\tclassName: 'scheduled-blocks-end-date-dropdown',\n\t\t\t\t\t\tcontentClassName: 'scheduled-blocks-end-date-popover',\n\t\t\t\t\t\tposition: 'bottom center',\n\t\t\t\t\t\trenderToggle: function renderToggle(_ref4) {\n\t\t\t\t\t\t\tvar onToggle = _ref4.onToggle,\n\t\t\t\t\t\t\t    isOpen = _ref4.isOpen;\n\t\t\t\t\t\t\treturn wp.element.createElement(TextControl, {\n\t\t\t\t\t\t\t\tlabel: __('Scheduled End Date/Time'),\n\t\t\t\t\t\t\t\tonClick: onToggle,\n\t\t\t\t\t\t\t\t'aria-expanded': isOpen,\n\t\t\t\t\t\t\t\thelp: __('When this block will stop being shown.'),\n\t\t\t\t\t\t\t\tvalue: props.attributes.scheduledEnd || '',\n\t\t\t\t\t\t\t\tonChange: function onChange(nextValue) {\n\t\t\t\t\t\t\t\t\tprops.setAttributes({\n\t\t\t\t\t\t\t\t\t\tscheduledEnd: nextValue\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\trenderContent: function renderContent() {\n\t\t\t\t\t\t\treturn wp.element.createElement(ScheduledBlocksScheduleEndDateTimePicker, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n}, 'addScheduledBlockControls');\n\n/**\n * Override props assigned to save component to inject our scheduled date and time.\n * This is only done if the component is a block type on which you can schedule.\n *\n * @param {Object} extraProps Additional props applied to save element.\n * @param {Object} blockType  Block type.\n * @param {Object} attributes Current block attributes.\n *\n * @return {Object} Filtered props applied to save element.\n */\nfunction addSaveProps(extraProps, blockType, attributes) {\n\n\t// If the current block supports scheduling, add our prop.\n\tif (isValidBlockType(blockType.name)) {\n\t\textraProps.scheduledstart = attributes.scheduledStart;\n\t\textraProps.scheduledend = attributes.scheduledEnd;\n\t}\n\n\t// If this block already has a non-empty schedule, add a custom class.\n\tif (typeof extraProps.scheduledstart === \"undefined\" && typeof extraProps.scheduledend === \"undefined\") {\n\t\treturn extraProps;\n\t}\n\n\t// At least one of our extra props has a value, add our class\n\tvar currentClassName = extraProps.className;\n\n\tvar newClassName = typeof currentClassName === 'undefined' || currentClassName === 'undefined' ? 'scheduled-block-content' : currentClassName + ' scheduled-block-content';\n\n\textraProps.className = newClassName;\n\treturn extraProps;\n} // end addSaveProps()\n\naddFilter('blocks.registerBlockType', 'scheduled-blocks/add-attribute', addAttribute);\naddFilter('editor.BlockEdit', 'scheduled-blocks/with-inspector-control', addScheduledBlockControls);\naddFilter('blocks.getSaveContent.extraProps', 'scheduled-blocks/save-props', addSaveProps);\naddFilter('editor.BlockEdit', 'scheduled-blocks/add-custom-class-name', addCustomClassName);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!*************************!*\
  !*** ./src/editor.scss ***!
  \*************************/
/*! dynamic exports provided */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9lZGl0b3Iuc2Nzcz81MzJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvZWRpdG9yLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ })
/******/ ]);